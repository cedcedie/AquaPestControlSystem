@model List<AquaPestControlSystem.Models.CustomerViewModel>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Aquarius Pest Control Services - Activity Log</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="~/css/output.css" media="all" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap-grid.min.css" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap-reboot.min.css" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap-utilities.min.css" />
    <style>
        table th, table td {
            border-bottom: 1px solid #ccc;
        }
    </style>
</head>
<body style="background-color: #8ecae6;">
    <div class="sidebar" id="menu">
        <h2>Aquarius Pest Control Services</h2>
        <a href="@Url.Action("ProprieterDashboard", "Proprieter")" class="menu-item" data-menu="Dashboard">
            <span class="icon">📋</span>
            <span>Dashboard</span>
        </a>
        <a href="@Url.Action("ProprieterAppointments", "Proprieter")" class="menu-item" data-menu="appointments">
            <span class="icon">📅</span>
            <span>Appointments</span>
        </a>
        <a href="@Url.Action("ProprieterCustomer", "Proprieter")" class="menu-item" data-menu="Customers">
            <span class="icon">👥</span>
            <span>Customers</span>
        </a>
        <a href="@Url.Action("ProprieterTechnicians", "Proprieter")" class="menu-item" data-menu="Technicians">
            <span class="icon">🔧</span>
            <span>Technicians</span>
        </a>
        <a href="@Url.Action("ProprieterReports", "Proprieter")" class="menu-item" data-menu="Reports">
            <span class="icon">📊</span>
            <span>Reports</span>
        </a>
        <a href="@Url.Action("ProprieterActivityLog", "Proprieter")" class="menu-item" data-menu="Activity-log">
            <span class="icon">📑</span>
            <span>Activity Log</span>
        </a>
<div class="profile">
    <a href="@Url.Action("ProprieterProfile", "Proprieter")" style="display: flex; align-items: center; text-decoration: none;">
        <img src="https://via.placeholder.com/40" alt="Profile Picture" style="margin-right: 10px;">
        <div class="profile-info" style="margin-right: 10px;">
            <span>Rodrigo</span>
            <span class="role">Proprietor</span>
        </div>
    </a>
    <a href="#" data-toggle="modal" data-target="#logoutModal" style="cursor: pointer; margin-left: 60px; text-decoration: none;">
        <span class="logout-arrow">⮞</span>
    </a>
</div> </div> </div>

<div class="modal fade" id="logoutModal" tabindex="-1" role="dialog" aria-labelledby="logoutModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="logoutModalLabel">Confirm Logout</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to log out?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <a href="@Url.Action("UserLogin", "User")" class="btn btn-primary">Confirm</a>
            </div>
        </div>
    </div>
</div>


    <div class="content">
        <div class="table-container">
            <div class="header">
                <h2>CUSTOMERS</h2>
                <div class="search-container">
                    <a href="@Url.Action("ProprieterAddCustomer", "Proprieter")">
                        <button class="add-tech-btn">Add Customer</button>
                    </a>
                    <a href="@Url.Action("ProprieterArchiveCustomers", "Proprieter")">
                        <button class="add-tech-btn">Archive</button>
                    </a>
                    <input type="text" id="searchInput" placeholder="Search..." />
                    <div class="sort-container" id="sortButton">
                        <span>Sort by Newest</span>
                        <span class="sort-arrow">▼</span>
                    </div>
                </div>
            </div>

            <table>
                <thead>
                    <tr>
                        <th>Customer Name</th>
                        <th>Contact Number</th>
                        <th>Email</th>
                        <th>Address</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody id="customerTableBody">
                    @if (Model != null && Model.Any())
                    {
                        @foreach (var customer in Model)
                        {
                                    <tr>
                                        <td>@customer.FullName</td>
                                        <td>@customer.ContactNum</td>
                                        <td>@customer.Email</td>
                                        <td>@customer.Address</td>
                                <td>
                                    <a href="@Url.Action("ProprieterEditCustomer", "Proprieter", new { id = customer.CustomerId })">
                                        <button class="btn btn-warning">Edit</button>
                                    </a>
                                </td>
                                    </tr>
                        }
                    }
                    else
                    {
                            <tr>
                                <td colspan="4">
                                    <div>No Customers Available.</div>
                                </td>
                            </tr>
                    }
                </tbody>
            </table>

         <div class="pagination">
                <span id="paginationInfo">Showing 0 to 0 of 0 entries</span>
                <div>
                    <button id="prevButton" onclick="prevPage()">Previous</button>
                    <button id="nextButton" onclick="nextPage()">Next</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="noMorePagesModal" tabindex="-1" role="dialog" aria-labelledby="noMorePagesModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="noMorePagesModalLabel">No More Pages</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    There are no more pages available.
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <script src="~/js/proSidebar.js"></script>
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
            const rowsPerPage = 12;
            const tableBody = document.getElementById("Archives");
            const paginationInfo = document.getElementById("paginationInfo");
            const prevButton = document.getElementById("prevButton");
            const nextButton = document.getElementById("nextButton");
            const searchInput = document.getElementById("searchInput");
            const noMorePagesModal = new bootstrap.Modal(document.getElementById('noMorePagesModal'));

            let currentPage = 1;
            let filteredRows = Array.from(tableBody.rows); 
            let totalRows = filteredRows.length;
            let totalPages = Math.ceil(totalRows / rowsPerPage);

            function filterTable() {
                const searchTerm = searchInput.value.toLowerCase();
                filteredRows = Array.from(tableBody.rows).filter(row => {
                    const rowText = row.textContent.toLowerCase();
                    return rowText.includes(searchTerm);
                });
                totalRows = filteredRows.length;
                totalPages = Math.ceil(totalRows / rowsPerPage);
                currentPage = 1; 
                updateTable();
            }

            function updateTable() {

                Array.from(tableBody.rows).forEach(row => row.style.display = "none");

                const startIndex = (currentPage - 1) * rowsPerPage;
                const endIndex = Math.min(startIndex + rowsPerPage, totalRows);


                for (let i = startIndex; i < endIndex; i++) {
                    filteredRows[i].style.display = "";
                }

                paginationInfo.textContent = `Showing ${startIndex + 1} to ${endIndex} of ${totalRows} entries`;
            }

            function nextPage() {
                if (currentPage < totalPages) {
                    currentPage++;
                    updateTable();
                } else {

                    noMorePagesModal.show();
                }
            }

            function prevPage() {
                if (currentPage > 1) {
                    currentPage--;
                    updateTable();
                }
            }

            nextButton.addEventListener("click", nextPage);
            prevButton.addEventListener("click", prevPage);
            searchInput.addEventListener("input", filterTable);

            updateTable();
        });
    </script>
</body>
</html>
